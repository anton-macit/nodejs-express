openapi: 3.0.0
info:
  title: Todo API
  version: 0.1.0
tags:
  - name: todo
    description: Everything about your ToDo items. Admin cannot do those requests
  - name: user
    description: Everything about your users
paths:
  /login:
    post:
      tags:
        - user
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginPasswordDto"
      responses:
        '200':
          description: Login successful. Use `auth_token` for HTTP `Authorization Bearer` header
          content:
            application/json:
              schema:
                type: object
                required:
                  - auth_token
                properties:
                  auth_token:
                    type: string
        '403':
          description: Unauthorized. User does not exist with the provided credentials
  /users:
    post:
      tags:
        - user
      summary: Create user. Only admin can do it
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginPasswordDto"
      responses:
        '200':
          description: A new user created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDto"
        '401':
          description: Unauthorized

  /todos:
    get:
      tags:
        - todo
      summary: Returns a list of todo items
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          required: false
          description: Default value is 0
        - in: query
          name: limit
          schema:
            type: integer
          required: false
          description: Default value is 10
      responses:
        '200':
          description: A JSON array of todo items
          content:
            application/json:
              schema:
                type: object
                required:
                  - items
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/TodoItem"
                  offset:
                    type: integer
                    description: Default value is 0
                  limit:
                    type: integer
                    description: Default value is 10
        '401':
          description: Unauthorized. Token expired
    post:
      tags:
        - todo
      summary: Create a new todo item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTodoItemDto"
      responses:
        '201':
          description: A new JSON todo item
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodoItem"
        '401':
          description: Unauthorized. Token expired
  /todos/{id}:
    get:
      tags:
        - todo
      summary: Returns a todo item
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: UUID
          required: true
      responses:
        '200':
          description: A JSON todo item
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodoItem"
        '401':
          description: Unauthorized. Token expired
        '404':
          description: Not found
    patch:
      tags:
        - todo
      summary: Update a todo item
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: UUID
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTodoItemDto"
      responses:
        '200':
          description: A JSON todo item
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodoItem"
        '401':
          description: Unauthorized. Token expired
        '404':
          description: Not found
    delete:
      tags:
        - todo
      summary: Delete a todo item
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: UUID
          required: true
      responses:
        '200':
          description: Deleted
        '401':
          description: Unauthorized. Token expired
        '404':
          description: Not found
components:
  schemas:
    TodoItem:
      title: TodoItem
      type: object
      required:
        - id
        - content
        - priority
        - created_at
      properties:
        id:
          title: id
          description: type UUID
          type: string
          format: uuid
        content:
          title: content
          type: string
        priority:
          title: priority
          type: integer
        created_at:
          title: created_at
          description: type Date
          type: string
    CreateTodoItemDto:
      title: Create TodoItem DTO
      type: object
      required:
        - content
        - priority
      properties:
        content:
          title: content
          type: string
        priority:
          title: priority
          type: integer
    UpdateTodoItemDto:
      title: Update TodoItem DTO
      type: object
      properties:
        content:
          title: content
          type: string
        priority:
          title: priority
          type: integer
    LoginPasswordDto:
      title: Create UserItem DTO
      type: object
      required:
        - username
        - password
      properties:
        username:
          title: username
          type: string
        password:
          title: password
          type: string
    UserDto:
      title: UserItem DTO
      type: object
      required:
        - id
        - username
        - created_at
      properties:
        id:
          title: id
          type: string
        username:
          title: username
          type: string
        created_at:
          title: created_at
          description: type Date
          type: string

