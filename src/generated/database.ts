/* tslint:disable */
/* eslint-disable */


/**
 * AUTO-GENERATED FILE - DO NOT EDIT!
 *
 * This file was automatically generated by pg-to-ts v.4.1.1
 * $ pg-to-ts generate -c postgresql://username:password@ep-frosty-silence-a2l9dvxw.eu-central-1.aws.neon.tech/tododb?sslmode=require -t pgmigrations -t todo -s public
 *
 */


export type Json = unknown;

// Table pgmigrations
export interface Pgmigrations {
  id: number;
  name: string;
  run_on: Date;
}
export interface PgmigrationsInput {
  id?: number;
  name: string;
  run_on: Date;
}
const pgmigrations = {
  tableName: 'pgmigrations',
  columns: ['id', 'name', 'run_on'],
  requiredForInsert: ['name', 'run_on'],
  primaryKey: 'id',
  foreignKeys: {},
  $type: null as unknown as Pgmigrations,
  $input: null as unknown as PgmigrationsInput
} as const;

// Table todo
export interface Todo {
  id: string;
  content: string;
  created_at: Date;
  priority: number;
}
export interface TodoInput {
  id?: string;
  content: string;
  created_at?: Date;
  priority?: number;
}
const todo = {
  tableName: 'todo',
  columns: ['id', 'content', 'created_at', 'priority'],
  requiredForInsert: ['content'],
  primaryKey: 'id',
  foreignKeys: {},
  $type: null as unknown as Todo,
  $input: null as unknown as TodoInput
} as const;


export interface TableTypes {
  pgmigrations: {
    select: Pgmigrations;
    input: PgmigrationsInput;
  };
  todo: {
    select: Todo;
    input: TodoInput;
  };
}

export const tables = {
  pgmigrations,
  todo,
}
